/* Do NOT try to deobfuscate this code thanks. */
'use strict'; function _0xe572() { const _0x138e70 = ['toString', 'table', '50994DIEONi', '{}.constructor(\x22return\x20this\x22)(\x20)', 'bind', 'return\x20(function()\x20', 'info', 'readFileSync', '../Languages', '1273850uGvNbB', 'log', 'console', 'stringify', '.json', 'apply', './Languages/Languages.json', './Languages/BaseLanguage.json', '4359130RlfVDP', 'existsSync', '343EyMOuI', 'length', 'join', 'node:fs', 'constructor', '180FWYGdL', '__proto__', '9EhLpkx', 'trace', '30228506YpTayt', '2401980WdSBTO', '6416eobHCh', '(((.+)+)+)+$', '10lSqKVJ', '1191444kQslwh', 'writeFileSync', 'exception']; _0xe572 = function () { return _0x138e70; }; return _0xe572(); } function _0x2f19(_0x29f1a4, _0x89cc01) { const _0x45131b = _0xe572(); return _0x2f19 = function (_0xccd8e7, _0x5d6a03) { _0xccd8e7 = _0xccd8e7 - 0x7b; let _0x141421 = _0x45131b[_0xccd8e7]; return _0x141421; }, _0x2f19(_0x29f1a4, _0x89cc01); } const _0x35ebb3 = _0x2f19; (function (_0x562bc8, _0x335ae0) { const _0x4376ca = _0x2f19, _0x590e06 = _0x562bc8(); while (!![]) { try { const _0x2b66b3 = -parseInt(_0x4376ca(0x9e)) / 0x1 + parseInt(_0x4376ca(0x97)) / 0x2 * (-parseInt(_0x4376ca(0x89)) / 0x3) + -parseInt(_0x4376ca(0x92)) / 0x4 + -parseInt(_0x4376ca(0x91)) / 0x5 * (-parseInt(_0x4376ca(0x8e)) / 0x6) + -parseInt(_0x4376ca(0x84)) / 0x7 * (-parseInt(_0x4376ca(0x8f)) / 0x8) + parseInt(_0x4376ca(0x8b)) / 0x9 * (parseInt(_0x4376ca(0x82)) / 0xa) + parseInt(_0x4376ca(0x8d)) / 0xb; if (_0x2b66b3 === _0x335ae0) break; else _0x590e06['push'](_0x590e06['shift']()); } catch (_0x21cc7c) { _0x590e06['push'](_0x590e06['shift']()); } } }(_0xe572, 0xe1312)); const languageTemplate = require(_0x35ebb3(0x81)), languages = require(_0x35ebb3(0x80)), fs = require(_0x35ebb3(0x87)), path = require('node:path'), langobjf = {}; function flattenObject(_0xf8689c, _0x3852d6 = '') { const _0x59c5ce = (function () { let _0x2fa14b = !![]; return function (_0x2173d1, _0x167689) { const _0x4642e6 = _0x2fa14b ? function () { const _0x9fdb42 = _0x2f19; if (_0x167689) { const _0x197c90 = _0x167689[_0x9fdb42(0x7f)](_0x2173d1, arguments); return _0x167689 = null, _0x197c90; } } : function () { }; return _0x2fa14b = ![], _0x4642e6; }; }()), _0x31b2c1 = _0x59c5ce(this, function () { const _0x5dcf2d = _0x2f19; return _0x31b2c1[_0x5dcf2d(0x95)]()['search'](_0x5dcf2d(0x90))[_0x5dcf2d(0x95)]()[_0x5dcf2d(0x88)](_0x31b2c1)['search']('(((.+)+)+)+$'); }); _0x31b2c1(); const _0x46ac7a = (function () { let _0x45f9c4 = !![]; return function (_0x414328, _0x2e5314) { const _0x52480e = _0x45f9c4 ? function () { const _0x57940f = _0x2f19; if (_0x2e5314) { const _0xeba6dd = _0x2e5314[_0x57940f(0x7f)](_0x414328, arguments); return _0x2e5314 = null, _0xeba6dd; } } : function () { }; return _0x45f9c4 = ![], _0x52480e; }; }()), _0x3d8180 = _0x46ac7a(this, function () { const _0x2426da = _0x2f19; let _0x129470; try { const _0x333eb5 = Function(_0x2426da(0x9a) + _0x2426da(0x98) + ');'); _0x129470 = _0x333eb5(); } catch (_0x3239fc) { _0x129470 = window; } const _0x351568 = _0x129470[_0x2426da(0x7c)] = _0x129470[_0x2426da(0x7c)] || {}, _0x355c2a = [_0x2426da(0x7b), 'warn', _0x2426da(0x9b), 'error', _0x2426da(0x94), _0x2426da(0x96), _0x2426da(0x8c)]; for (let _0x25ae24 = 0x0; _0x25ae24 < _0x355c2a[_0x2426da(0x85)]; _0x25ae24++) { const _0xbf5a9d = _0x46ac7a[_0x2426da(0x88)]['prototype']['bind'](_0x46ac7a), _0x2138bf = _0x355c2a[_0x25ae24], _0x1babb7 = _0x351568[_0x2138bf] || _0xbf5a9d; _0xbf5a9d[_0x2426da(0x8a)] = _0x46ac7a['bind'](_0x46ac7a), _0xbf5a9d[_0x2426da(0x95)] = _0x1babb7['toString'][_0x2426da(0x99)](_0x1babb7), _0x351568[_0x2138bf] = _0xbf5a9d; } }); _0x3d8180(); for (const _0x5e6f13 in _0xf8689c) { typeof _0xf8689c[_0x5e6f13] === 'object' ? flattenObject(_0xf8689c[_0x5e6f13], '' + _0x3852d6 + _0x5e6f13 + '.') : langobjf['' + _0x3852d6 + _0x5e6f13] = _0xf8689c[_0x5e6f13] || ''; } } flattenObject(languageTemplate); for (const lang in languages) { let obj = langobjf; if (fs[_0x35ebb3(0x83)](path['join'](__dirname, _0x35ebb3(0x9d), languages[lang] + _0x35ebb3(0x7e)))) try { const existingContent = fs[_0x35ebb3(0x9c)](path['join'](__dirname, '../Languages', languages[lang] + '.json')), existingData = JSON['parse'](existingContent); obj = { ...langobjf, ...existingData }; } catch { } const updatedData = JSON[_0x35ebb3(0x7d)](obj, null, 0x4); fs[_0x35ebb3(0x93)](path[_0x35ebb3(0x86)](__dirname, '../Languages', languages[lang] + _0x35ebb3(0x7e)), updatedData, 'utf-8'); }